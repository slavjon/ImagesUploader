{"version":3,"sources":["upload.js","app.js"],"names":["formatBytes","a","b","c","d","Math","floor","log","parseFloat","pow","toFixed","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","upload","selector","options","files","previewGrid","input","querySelector","open","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHundler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","src","result","insertAdjacentHTML","name","size","readAsDataURL","removeImgHandler","dataset","filter","removeBlock","closest","setTimeout","remove","addEventListener"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"../src","sourcesContent":["//transform bites to KB function\r\nfunction formatBytes(a, b = 2) {\r\n    if (0 === a) return \"0 Bytes\";\r\n    const c = 0 > b ? 0 : b,\r\n        d = Math.floor(Math.log(a) / Math.log(1024));\r\n    return parseFloat((a / Math.pow(1024, d)).toFixed(c)) + \" \" + [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"][d]\r\n}\r\n\r\n// helper function for create new html elements\r\nconst element = (tag, classes = [], content) => {\r\n\r\n    const node = document.createElement(tag);\r\n\r\n    if (classes.length) {\r\n        node.classList.add(...classes);\r\n    }\r\n    if (content) {\r\n        node.textContent = content;\r\n    }\r\n    return node;\r\n}\r\n\r\nexport function upload(selector, options = {}) {\r\n\r\n    let files = []; //all added files array\r\n    const previewGrid = element('div', ['preview__grid']);\r\n    const input = document.querySelector(selector);\r\n    const open = element('button', ['btn'], 'Open images');\r\n    const upload = element('button', ['btn', 'primary'], 'Download');\r\n    upload.style.display = 'none';\r\n\r\n    if (options.multi) {\r\n        input.setAttribute('multiple', true);\r\n    }\r\n\r\n    if (options.accept && Array.isArray(options.accept)) {\r\n        input.setAttribute('accept', options.accept.join(','))\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', previewGrid);\r\n    input.insertAdjacentElement('afterend', upload);\r\n    input.insertAdjacentElement('afterend', open);\r\n\r\n    const triggerInput = () => input.click();\r\n\r\n    const changeHundler = event => {\r\n        if (!event.target.files.length) {\r\n            return;\r\n        }\r\n\r\n        files = Array.from(event.target.files);\r\n\r\n        previewGrid.innerHTML = '';\r\n        upload.style.display = 'inline-block';\r\n\r\n        files.forEach(file => {\r\n            if (!file.type.match('image')) {\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = ev => {\r\n                const src = ev.target.result;\r\n                previewGrid.insertAdjacentHTML('afterbegin',\r\n                    `<div class=\"preview__img\">\r\n                        <div class=\"preview__remove\" data-name=\"${file.name}\">&times;</div>\r\n                        <img src=\"${src}\" alt=\"${file.name}\">\r\n                        <div class=\"preview__panel\">\r\n                            <div class=\"name\">${file.name}</div>\r\n                            <div class=\"size\">Size: ${formatBytes(file.size, 0)}</div>\r\n                        </div>\r\n                    </div>\r\n                    `);\r\n            }\r\n            reader.readAsDataURL(file);\r\n        });\r\n    }\r\n    const removeImgHandler = event => {\r\n        if (!event.target.dataset.name) {\r\n            return\r\n        }\r\n        const { name } = event.target.dataset;\r\n        files = files.filter(file => file.name !== name);\r\n\r\n        if (!files.length) {\r\n            upload.style.display = 'none';\r\n        }\r\n\r\n        const removeBlock = previewGrid\r\n            .querySelector(`[data-name=\"${name}\"]`).closest('.preview__img');\r\n        removeBlock.classList.add('removing-animation');\r\n        setTimeout(() => removeBlock.remove(), 200);\r\n    }\r\n\r\n    open.addEventListener('click', triggerInput);\r\n    input.addEventListener('change', changeHundler);\r\n    previewGrid.addEventListener('click', removeImgHandler);\r\n}","import { upload } from './upload.js';\r\n\r\nupload('#file', {\r\n    multi: true, // param to add many images\r\n    accept: ['.png', '.jpg', '.jpeg', '.webp'] //allow to images format\r\n});"]}